---

# A significant number of defaults are set based on conditionals, which is what the `__mailman3_*` variables found in
# these defaults are used for.  You should generally *not* be setting a `__mailman3_*` variable, there are corresponding
# non-underscore variables that are intended to be set by role users.

#
# Installation
#

# There are Mailman 3 system (apt) packages in some versions of Debian and Ubuntu, see:
#
# https://packages.debian.org/search?keywords=mailman3
# https://packages.ubuntu.com/search?keywords=mailman3
#
# It is recommended that you use the pip installation method. The Debian packages are not well maintained and this role
# is not as well tested with them.

# Options are: pip, package (system packages).
mailman3_install_method: pip

# When installing with pip, Mailman will be installed into a venv in this directory.
mailman3_install_dir: /opt/mailman3

# Mailman Core configuration files
mailman3_core_etc_dir: /etc/mailman3

# Mailman Core data and state
mailman3_core_var_dir: /var/lib/mailman3

# Mailman Core logs
mailman3_core_log_dir: /var/log/mailman3

# When installing with pip and Mailman is already installed, should it be upgraded to the latest version? It's can be
# convenient to only set this when you explicitly want to upgrade by running `ansible-playbook ... -e
# mailman3_upgrade=true`
mailman3_upgrade: false

# When installing with pip, should the system packages that Mailman 3 depends on be installed for you?
mailman3_install_system_dependencies: true

# You should rarely need to set these - see the ansible.builtin.pip documentation.
# mailman3_virtualenv_python: python3
mailman3_virtualenv_command: >-
  {{
    (__mailman3_os == "redhat-7") | ternary(
      "/opt/rh/rh-python38/root/usr/bin/python3 -m venv",
      "python3 -m venv",
    )
  }}

# Extra packages to install via pip or the package manager (depending on which installation method you are using).
mailman3_extra_packages: []

# Process manager to use when installing with pip, currently only systemd is supported by this role.
mailman3_process_manager: systemd

#
# Users
#

# Mailman Core and Web Interface (Postorius + Hyperkitty) run as separate users.

# Debian-based distributions have a 'list' system user predefined that is intended to be used by Mailman Core, it will
# be used by default. If you are on a different OS or prefer to use a different user, set this option. Only the `name`
# value is required, additional options are the common paramters of the ansible.builtin.user module (see tasks/user.yml)
# mailman3_core_user:
#  name: mailman3-core
#  comment: Mailman Mailing List Manager
#  home: "{{ mailman3_core_var_dir }}"
#  system: true

# If you set mailman3_core_user, the role will attempt to create that user, unless you disable it with this option
mailman3_create_core_user: "{{ mailman3_core_user is defined }}"

# Per the Mailman 3 documentation, the Web Interface must run as the same user as your proxy server. However, this is not
# really true, and it's preferable to run it as a different user for security best practices. Thus we create a user if
# installing Mailman 3 with pip.

#
# General configuration
#

# Should Ansible's backup feature be used when configs change?
mailman3_backup_configs: false

# This is both Django SERVER_EMAIL and Mailman Core site_owner, and should be set to a real person.
mailman3_site_owner: "root@{{ inventory_hostname }}"

# Mailman Core API. Used by Postorius and Hyperkitty to communicate with Mailman Core.
mailman3_core_api_hostname: localhost
mailman3_core_api_port: 8001
mailman3_core_api_admin_user: restadmin
mailman3_core_api_admin_pass: restpass
mailman3_core_public_rest_api: true

# Using the default archiver secret key is not secure, generate a random key!
mailman3_archiver_key: SecretArchiverAPIKey

#
# Mailman Core configuration
#

# The Mailman Core config (mailman.cfg). Your configuration should be done in 'mailman3_config', which is recursively
# merged with the defaults below. Top level keys become sections in the ini file. Be careful to quote anything that YAML
# might parse into a different value. For example:
#
# mailman3_config:
#   mailman:
#     site_owner: listmaster@example.org
#   mta:
#     # bypass the content filter (amavisd-new) for Mailman messages since they were scanned on the way in
#     smtp_port: 10025
#   database:
#     class: mailman.database.postgresql.PostgreSQLDatabase
#     url: postgres:///mailman3_core?host=/var/run/postgresql
#   arc:
#     enabled: 'yes'
#     privkey: '/etc/dkimkeys/mail.private'
#     selector: mail
#     domain: lists.example.org
#     dmarc: 'yes'
#     dkim: 'yes'
#     authserv_id: lists.example.org
#     trusted_authserv_ids: lists.example.org, lists.example.com, example.org
#
# It is unfortunately not possible to "unset" a default, so if you need to do that, override __mailman3_config_default
# and fully define your Mailman Core config in mailman3_config:
#
#  __mailman3_config_default: {}
# mailman3_config:
#   mailman:
#     layout: "local"
#     site_owner: "{{ mailman3_site_owner }}"
#   webservice:
#     hostname: "{{ mailman3_core_api_hostname }}"
#     ...
#   ...
#
__mailman3_config_default:
  mailman:
    layout: "custom"
    site_owner: "{{ mailman3_site_owner }}"
  paths.custom:
    var_dir: "{{ mailman3_core_var_dir }}"
    bin_dir: "$argv"
    log_dir: "{{ mailman3_core_log_dir }}"
    lock_dir: "{{ mailman3_core_var_dir }}/locks"
    data_dir: "{{ mailman3_core_var_dir }}/data"
    cache_dir: "{{ mailman3_core_var_dir }}/cache"
    etc_dir: "{{ mailman3_core_etc_dir }}"
    messages_dir: "{{ mailman3_core_var_dir }}/messages"
    archives_dir: "{{ mailman3_core_var_dir }}/archives"
    template_dir: "{{ mailman3_core_var_dir }}/templates"
    pid_file: "{{ mailman3_core_var_dir }}/master.pid"
    lock_file: "{{ mailman3_core_var_dir }}/master.lck"
  webservice:
    hostname: "{{ mailman3_core_api_hostname }}"
    port: "{{ mailman3_core_api_port }}"
    use_https: "no"
    admin_user: "{{ mailman3_core_api_admin_user }}"
    admin_pass: "{{ mailman3_core_api_admin_pass }}"
    api_version: "3.1"
  archiver.hyperkitty:
    class: "mailman_hyperkitty.Archiver"
    enable: "yes"
    configuration: "{{ mailman3_core_etc_dir }}/hyperkitty.cfg"
  shell:
    history_file: "$var_dir/history.py"
  mta:
    verp_confirmations: "yes"
    verp_personalized_deliveries: "yes"
    verp_delivery_interval: "1"

#
# Stuff below here you should not need to change
#

# Base set of Python packages
__mailman3_pip_packages:
  - importlib-resources==5.13.0
  - mailman
  - mailman-hyperkitty

# Keeping from from the full version of the role here in the core version.
# Use pysassc rather than sassc for CSS preprocessing. Enabling installs the libsass Python package from PyPI, disabling
# installs the sassc system package.
mailman3_use_pysassc: true

# Packages to install from PyPI if using the pip install method. Automatically includes libsass if mailman3_use_pysassc
# is enabled.
mailman3_pip_packages: >-
  {{
    __mailman3_pip_packages +
    mailman3_extra_packages +
    (mailman3_use_pysassc | ternary(['libsass'], []))
  }}

# Packages to install from the system package manager if using the package install method
mailman3_packages:
  - mailman3-full

# Dependency packages to install from the system package manager if using the pip install method. Automatically includes
# sassc if mailman3_use_pysassc is not enabled.
__mailman3_system_dependency_packages:
  debian:
    - acl
    - python3
    - python3-venv
    - python3-setuptools
  redhat-7:
    - rh-python38   # requires EL7+ and CentOS SCL
  redhat-8:
    - python39
  redhat-9:
    - python3
mailman3_system_dependency_packages: >-
  {{
    __mailman3_system_dependency_packages[__mailman3_os] +
    (mailman3_use_pysassc | ternary([], ['sassc']))
  }}

# Service names for performing restarts and naming systemd service units.
mailman3_core_service_name: "{{ (mailman3_install_method == 'pip') | ternary('mailman3-core', 'mailman3') }}"

__mailman3_config_merged: "{{ __mailman3_config_default | combine(mailman3_config | default({}), recursive=True) }}"

__mailman3_debian_user_name: list
__mailman3_core_user_name: >-
    {{
        (mailman3_core_user | default({})).name | default(
        __mailman3_debian_user_name if ansible_os_family == "Debian" else
        'mailman')
    }}
# __mailman3_core_user_group is set in the group_discovery tasks

__mailman3_os: >-
  {{
    (ansible_os_family == "RedHat") | ternary(
      ansible_os_family ~ '-' ~ ansible_distribution_major_version,
      ansible_os_family
    ) | lower
  }}

# Similar to mailman3_web_url. Used in /etc/mailman3/hyperkitty.cfg:
mailman3_hyperkitty_server_url: "https://{{ inventory_hostname }}"

mailman3_mta: postfix
mailman3_relayhost: smtp.mailgun.org:587
mailman3_sasl_passwd: smtp.mailgun.org postmaster@example.com:12345

# Database variables
mailman3_database_type: postgres
mailman3_database_pg_packages:
  - postgresql-15
  # - postgresql-contrib
  - libpq-dev
  - python3-pip
mailman3_database_super_password: superpassword
mailman3_postgresql_config_dir: "/etc/postgresql/15"
mailman3_database_list:
  - name: mailman3_core
    username: mailman3_core
    password: mypassword
    subnet: "0.0.0.0/0"

elasticsearch_install: true
elasticsearch_version: '7.x'
elasticsearch_network_host: "0.0.0.0"
elasticsearch_http_port: 9200
elasticsearch_extra_options: ''
elasticsearch_heap_size_min: 1g
elasticsearch_heap_size_max: 2g

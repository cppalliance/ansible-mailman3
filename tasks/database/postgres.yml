---
- name: Postgres apt-key
  ansible.builtin.apt_key:
    url: https://www.postgresql.org/media/keys/ACCC4CF8.asc
    state: present

- name: Postgres repo
  ansible.builtin.apt_repository:
    repo: 'deb http://apt.postgresql.org/pub/repos/apt/ {{ ansible_distribution_release }}-pgdg main'
    state: present
    filename: 'pgdg'

- name: Apt update
  ansible.builtin.apt:
    update_cache: true
  changed_when: false

- name: Install packages
  ansible.builtin.apt:
    name: "{{ item }}"
  with_items: "{{ mailman3_database_pg_packages }}"

- name: Install pip modules
  ansible.builtin.pip:
    name: "{{ item }}"
  with_items:
    - psycopg2

- name: Ensure postgresql is running and starts on boot
  ansible.builtin.service:
    name: postgresql
    state: started
    enabled: true

- name: Set superuser password
  become: true
  become_user: postgres
  vars:
    ansible_ssh_pipelining: true
  community.postgresql.postgresql_user:
    name: postgres
    password: "{{ mailman3_database_super_password }}"
    state: present

# - name: Ensure user does not have unnecessary privileges
#  sudo_user: postgres
#  postgresql_user: name={{ database_username }} role_attr_flags=NOSUPERUSER,NOCREATEDB state=present

- name: Configure postgresql.conf
  ansible.builtin.lineinfile:
    dest: "{{ mailman3_postgresql_config_dir }}/main/postgresql.conf"
    line: "listen_addresses = '*'"
    mode: '0755'
    state: present
    create: true
  notify:
    - Restart postgresql

- name: Install multiple databases
  with_items: "{{ mailman3_database_list }}"
  become: true
  become_user: postgres
  vars:
    ansible_ssh_pipelining: true
  community.postgresql.postgresql_db:
    name: "{{ item.name }}"
    encoding: 'UTF-8'
    lc_collate: 'en_US.UTF-8'
    lc_ctype: 'en_US.UTF-8'
    template: 'template0'
    state: present

- name: Install multiple database users
  with_items: "{{ mailman3_database_list }}"
  become: true
  become_user: postgres
  vars:
    ansible_ssh_pipelining: true
  community.postgresql.postgresql_user:
    db: "{{ item.name }}"
    name: "{{ item.username }}"
    password: "{{ item.password }}"
    state: present

- name: Multiple databases GRANT ALL PRIVILEGES ON DATABASE to user
  with_items: "{{ mailman3_database_list }}"
  become: true
  become_user: postgres
  vars:
    ansible_ssh_pipelining: true
  community.postgresql.postgresql_privs:
    db: "{{ item.name }}"
    privs: ALL
    type: database
    role: "{{ item.username }}"

- name: Multiple databases GRANT ALL PRIVILEGES ON SCHEMA public to user
  with_items: "{{ mailman3_database_list }}"
  become: true
  become_user: postgres
  vars:
    ansible_ssh_pipelining: true
  community.postgresql.postgresql_privs:
    db: "{{ item.name }}"
    privs: ALL
    type: schema
    objs: public
    role: "{{ item.username }}"

- name: Multiple databases configure pg_hba
  with_items: "{{ mailman3_database_list }}"
  ansible.builtin.lineinfile:
    dest: "{{ mailman3_postgresql_config_dir }}/main/pg_hba.conf"
    line: "host    {{ item.name }}    {{ item.username }}    {{ item.subnet }}    md5"
    mode: '0755'
    state: present
    create: true
  notify:
    - Restart postgresql

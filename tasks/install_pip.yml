---

- name: Install system dependencies
  ansible.builtin.package:
    name: "{{ mailman3_system_dependency_packages }}"
  when: mailman3_install_system_dependencies

# This is a separate task from the next one because `python3 -m venv` doesn't install wheel and pip needs it to build
# wheels (not strictly required, but preferred) and won't load it mid-invocation if installed during the next task
- name: Create Mailman venv
  ansible.builtin.pip:
    name: wheel
    state: "{{ 'latest' if mailman3_upgrade else omit }}"
    virtualenv: "{{ mailman3_install_dir }}"
    virtualenv_python: "{{ mailman3_virtualenv_python | default(omit) }}"
    virtualenv_command: "{{ mailman3_virtualenv_command | default(omit) }}"

- name: Install Mailman and Python dependencies
  ansible.builtin.pip:
    name: "{{ mailman3_pip_packages }}"
    state: "{{ 'latest' if mailman3_upgrade else omit }}"
    virtualenv: "{{ mailman3_install_dir }}"

- name: Create configuration, data, and state directories
  ansible.builtin.file:
    path: "{{ item.path }}"
    owner: "{{ item.owner | default(omit) }}"
    group: "{{ item.group | default(omit) }}"
    mode: "{{ item.mode | default(omit) }}"
    state: directory
  when: item.when | default(true)
  loop:
    # Ensure the parents, if they do not exist, are not created with the list user as the owner
    - path: "{{ mailman3_core_var_dir | dirname }}"
      mode: "0755"
    - path: "{{ mailman3_core_etc_dir }}"
      mode: "0755"
    - path: "{{ mailman3_core_var_dir }}"
      owner: "{{ __mailman3_core_user_name }}"
      group: "{{ __mailman3_core_group_name }}"
      mode: "0755"
    - path: "{{ mailman3_core_log_dir }}"
      owner: "{{ __mailman3_core_user_name }}"
      group: "{{ __mailman3_core_group_name }}"
      mode: "0755"

- name: Install systemd service unit files
  ansible.builtin.template:
    src: "{{ item.src }}.j2"
    dest: /etc/systemd/system/{{ item.dest }}
    mode: "0644"
  loop:
    - src: mailman3-core.service
      dest: "{{ mailman3_core_service_name }}.service"
  loop_control:
    label: "{{ item.dest }}"
  when: mailman3_process_manager == 'systemd'
  notify:
    - Reload systemd manager configuration
    # TODO: split tasks to only restart the affected service
    - Restart mailman3-core service
